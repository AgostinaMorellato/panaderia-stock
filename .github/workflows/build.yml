name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Build and run
          run: docker-compose up -d

    unit-test:
        runs-on: ubuntu-latest
        needs: build
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Setup Go
          uses: actions/setup-go@v2
          with:
            go-version: '1.17'

        - name: Run Unit Tests
          working-directory: backend
          run: go test -v ./...

    publish-docker-image:
        needs: unit-test
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v2
  
        - name: Login to Docker Hub
          run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      
        - name: Tag and push Docker images
          run: |
             docker build -t ${{ secrets.DOCKER_USERNAME }}/panderia-stock-backend-1:latest ./backend
             docker build -t ${{ secrets.DOCKER_USERNAME }}/panderia-stock-frontend-1:latest ./frontend
             docker build -t ${{ secrets.DOCKER_USERNAME }}/panderia-stock-db-1:latest ./db
          
             docker push ${{ secrets.DOCKER_USERNAME }}/panderia-stock-backend-1:latest
             docker push ${{ secrets.DOCKER_USERNAME }}/panderia-stock-frontend-1:latest
             docker push ${{ secrets.DOCKER_USERNAME }}/panderia-stock-db-1:latest
          env:
             DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
             DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    integration-test:
        needs: publish-docker-image
        runs-on: ubuntu-latest
  
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v2
  
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
             node-version: 'latest'
  
        - name: Install Dependencies and CodeceptJS
          working-directory: frontend
          run: |
             npx playwright install
             npm install
             sudo apt-get install -y xvfb
  
        - name: Run Integration Tests with xvfb-run
          working-directory: frontend
          run: xvfb-run -a npx codeceptjs run --steps -d